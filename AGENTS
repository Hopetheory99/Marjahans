```markdown
# AGENTS.md — Rules & Context for “Marjahan’s” Jewellery Store

> **Audience**: Autonomous coding agents (e.g. OpenAI Codex CLI) and human contributors.  
> **Goal**: Provide the *single source of truth* for project structure, standards, and safety rails.

---

## 1  Project Snapshot
| Key            | Value                                                                           |
|----------------|---------------------------------------------------------------------------------|
| Brand          | **Marjahan’s** – premium Bangladeshi fine‑jewellery label                       |
| Stack          | WordPress 6.x + WooCommerce 8.x · PHP 8.3 · MySQL 8 · nginx · Tailwind CSS · React (ES2022) |
| Custom Code    | `wp-content/themes/marjahans/` (Tailwind + Timber/Twig),<br>`wp-content/plugins/marjahans‑gateway/` (bKash / Nagad) |
| Tooling        | Docker Compose · Composer · npm · Playwright (E2E) · PHPUnit (unit)             |
| CI/CD          | GitHub Actions → Fly.io (staging & prod)                                        |

---

## 2  Directory Contract

```

.
├── docker/                 # Container definitions
├── wp-content/
│   ├── themes/marjahans/   # Custom theme (edit here)
│   ├── plugins/
│   │   └── marjahans-gateway/  # Custom payment plugin (edit here)
│   └── mu-plugins/         # Do NOT modify
├── tests/
│   ├── php/                # PHPUnit
│   └── e2e/                # Playwright
├── .github/workflows/      # CI pipelines
└── docs/                   # Architecture & design system

```

**Never edit or commit to:**

* WordPress core (`wp-admin/`, `wp-includes/`)  
* Any `vendor/` folder generated by Composer  
* Built assets in `build/` – regenerate with the build script instead

---

## 3  Coding Standards

### PHP  
* Follow **WordPress Coding Standards** (WPCS) & PSR‑12; verify with `phpcs`  
* Use namespaces `Marjahans\{Component}`  
* Escape every output (`esc_html__()`, `wp_kses_post()`, etc.)  
* Protect every action with nonces & capability checks (`wp_nonce_field()`, `check_admin_referer()`, `current_user_can()`)  
* **Database**: only parameterised queries via `$wpdb->prepare()`  

### JavaScript / React  
* ES2022 modules, strict mode, TypeScript in `.tsx` files  
* Functional components + hooks; style with Tailwind utility classes  
* Auto‑format using Prettier (`npm run format`)  

### CSS  
* Tailwind CSS first; avoid bespoke CSS unless essential  
* Purge unused classes in production build  

### Security Checklist  
1. No secrets committed – read from env vars injected by Docker / CI  
2. Sanitize, validate, escape – *always*  
3. Mock external HTTP calls in tests; internet is disabled in Codex sandbox  

---

## 4  Quality Gates & Commands

| Layer | Tool           | Command                           |
|-------|----------------|-----------------------------------|
| Lint  | phpcs / Prettier | `composer lint` · `npm run format:check` |
| Unit  | PHPUnit        | `composer test`                   |
| E2E   | Playwright     | `npm run test:e2e`                |

All three **must pass** before a pull‑request is mergeable.

---

## 5  Git Workflow

1. Branch from `main` → `feat/<slug>` or `fix/<slug>`  
2. Atomic PR, descriptive title, links to issues  
3. CI: build → lint → test → deploy to **staging**  
4. Human review → squash‑merge → tag `v*.*.*` → **production**

---

## 6  Codex‑Specific Instructions

| Rule | Detail |
|------|--------|
| Role | Behave as **“Senior WordPress engineer”** |
| Output | Default to **Git‑style diffs** unless asked otherwise |
| Tests | After each change, run *only* affected test suites |
| Lint  | Run `composer lint` & `npm run format:check` when relevant files change |
| Shell | Sandbox has `CODEX_SANDBOX_NETWORK_DISABLED=1`; mock all network calls |
| Dependencies | PHP ⇒ update `composer.json` · JS ⇒ update `package.json` then install |
| Forbidden edits | See §2 “Never edit” list |
| Documentation | Update `/docs/` when you introduce new patterns or decisions |

---

## 7  Task Stub Template

```

### Plan

* [ ] Files / functions to modify
* [ ] Tests to add / update
* [ ] Local command(s) to run for green checks

### Acceptance criteria

<bullet list of observable outcomes>

### Diff

\<auto‑generated by Codex>

```

---

## 8  Contact

* Lead dev: `@lead‑dev` on Slack  
* Design system & Figma link: see `docs/design-system.md`  

_If a human prompt explicitly marked **OVERRIDE** conflicts with this file, obey the prompt and leave a note in the PR._  
```
